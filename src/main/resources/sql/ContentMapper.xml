<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ContentMapper">

	<resultMap id="contentSelectMap" type="content">
		<result property="contentId" column="BRD_ID" jdbcType="NUMERIC" />
		<result property="userId" column="USER_ID" jdbcType="VARCHAR" />
		<result property="email" column="EMAIL" jdbcType="VARCHAR" />
		<result property="title" column="TLE" jdbcType="VARCHAR" />
		<result property="fileDesc" column="DES" jdbcType="VARCHAR" />
		<result property="category" column="CATE" jdbcType="VARCHAR" />
		<result property="filePath" column="FILE_PATH" jdbcType="VARCHAR" />
		<result property="fileName" column="FILE_NAME" jdbcType="VARCHAR" />
		<result property="fileLength" column="FILE_LENGTH" jdbcType="NUMERIC" />
		<result property="regDate" column="REG_DATE" jdbcType="VARCHAR" />
		<association property="tag" column="BRD_ID" select="getContentTagByTitle" javaType="ArrayList" />
	</resultMap>
	
	<resultMap id="commentSelectMap" type="comment">
		<result property="commentId" column="CMT_ID" jdbcType="NUMERIC"/>
		<result property="email" column="EMAIL" jdbcType="VARCHAR"/>
		<result property="userId" column="USER_ID" jdbcType="VARCHAR" />
		<result property="contentId" column="BRD_ID" jdbcType="NUMERIC" />
		<result property="cmtDesc" column="DES" jdbcType="VARCHAR" />
		<result property="regDate" column="REG_DATE" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- SQL : INSERT --> <!-- seq_content_brd_id.NEXTVAL -->
	<insert id="addContent" parameterType="content" keyColumn="BRD_ID"
		keyProperty="contentId" useGeneratedKeys="true">
		INSERT
		INTO BRDS( TLE , USER_ID , EMAIL, DES ,
		FILE_PATH , FILE_NAME, FILE_LENGTH, CATE , REG_DATE)
		VALUES (#{title:VARCHAR} , #{userId:VARCHAR} , #{email:VARCHAR},
		#{fileDesc:VARCHAR} , #{filePath:VARCHAR},
		#{fileName:VARCHAR} , #{fileLength:NUMERIC},
		#{category:VARCHAR} , TO_CHAR(SYSDATE, 'YY/MM/DD HH24:MI'))
	</insert>

	<insert id="addContentTag" parameterType="content">
		INSERT ALL
		<foreach collection="tag" item="item" separator=" ">
			INTO BRD_TAG
			(BRD_ID, TAG_NAME) VALUES (#{contentId}, #{item})
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="addComment" parameterType="comment">
		INSERT
		INTO CMTS( USER_ID, BRD_ID, EMAIL, DES, REG_DATE )
		VALUES ( #{userId}, #{contentId}, #{email}, #{cmtDesc}, TO_CHAR(SYSDATE, 'YY/MM/DD HH24:MI') )
	</insert>
	
	<!-- SQL : SELECT ONE keyword = title -->
	<select id="getContent" parameterType="string" resultMap="contentSelectMap">
		SELECT
		BRD_ID , USER_ID , EMAIL , TLE , DES , FILE_PATH , FILE_NAME, FILE_LENGTH, CATE, REG_DATE
		FROM BRDS
		WHERE TLE = #{value}
	</select>
	
	<select id="getContentTagByTitle" parameterType="int" resultType="string">
		SELECT TAG_NAME
		FROM BRD_TAG
		WHERE BRD_ID = #{value}
	</select>
	
	<select id="getContentTagByTag" parameterType="string" resultType="string">
		SELECT BRD_ID
		FROM BRD_TAG
		WHERE TAG_NAME = #{value}
	</select>
	
	<!-- SQL : SELECT LIST -->
	<select  id="getContentList"  parameterType="search"	resultMap="contentSelectMap">
	<!-- SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT BRD_ID, USER_ID, TLE, DES, FILE_PATH, FILE_NAME, FILE_LENGTH, CATE, REG_DATE
											FROM BRDS
											<if test="searchCondition != null ">
										 		<where> 
											 		<if test="searchCondition == 0 and searchKeyword !='' ">
											 		TLE like &apos;${searchKeyword}%&apos;
											 		</if>
										 		</where>
											</if>
											ORDER BY REG_DATE ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} -->
					SELECT * FROM BRDS 
					WHERE UPPER(TLE) LIKE UPPER('%${searchKeyword}%')
					OR UPPER(CATE) like UPPER('%${searchKeyword}%')
					ORDER BY BRD_ID DESC
					
	 </select>
	 
	 <select id="getMyContentList" parameterType="search" resultMap="contentSelectMap">
	 	SELECT * FROM BRDS WHERE EMAIL = #{searchKeyword}
	 </select>
	 
	 <select  id="getComment"  parameterType="int"	resultMap="commentSelectMap">
		SELECT * FROM CMTS WHERE BRD_ID = #{value} ORDER BY REG_DATE
	 </select>
	 
	 <!-- SQL : SELECT BY CATEGORY -->
	 <select  id="getContentListByCategory"  parameterType="search"  resultMap="contentSelectMap">
	 SELECT * FROM BRDS where CATE like '%${searchKeyword}%'
	 </select>
	 
	<!-- SQL : UPDATE -->
	<update id="updateContent" parameterType="content">
		UPDATE BRDS
		<set>
			TLE = #{title} ,
			DES = #{fileDesc} ,
			FILE_PATH = #{filePath} ,
			FILE_NAME = #{fileName} ,
			FILE_LENGTH = #{fileLength},
			CATE = #{category} ,
			REG_DATE = SYSDATE
		</set>
		WHERE BRD_ID = #{contentId}
	</update>
	
	<!-- SQL : UPDATE -->
	<update id="updateContentFileLength" parameterType="int">
		UPDATE BRDS
		<set>
			FILE_LENGTH = #{fileLength}
		</set>
		WHERE BRD_ID = #{contentId}
	</update>
	
	<update id="updateComment" parameterType="comment">
		UPDATE CMTS
		<set>
			DES = #{desc}
		</set>
		WHERE USER_ID = #{userId}
		AND BRD_ID = #{contentId}
	</update>
	
	<!-- delete -->
	<delete id="deleteContent" parameterType="int">
		DELETE  FROM BRDS
		WHERE
		BRD_ID = #{value}
	</delete>
	
	<delete id="deleteContentTag" parameterType="int">
		DELETE BRD_TAG
		WHERE 
		BRD_ID = #{value}
	</delete>

	<delete id="deleteComment" parameterType="comment">
		DELETE CMTS
		WHERE 
		CMT_ID = #{value}
	</delete>
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM( SELECT BRD_ID
											FROM BRDS
											<if test="searchCondition != null ">
										 		<where> 
											 		<if test="searchCondition == 0 and searchKeyword !='' ">
											 		TLE like &apos;${searchKeyword}%&apos;
											 		</if>
										 		</where>
											</if>
									) countTable						
	 </select>
	 
	 <select id="checkTitle" parameterType="string"  resultMap="contentSelectMap">
	     SELECT 
	     TLE FROM BRDS
	     WHERE TLE = #{title}
	 </select>
	 
</mapper>